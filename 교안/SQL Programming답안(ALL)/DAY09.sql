--실전문제① ▶ WHERE절, 조건절에 CASE문 적용하기----------------------------------------------------
SELECT OUTBOUND_DATE
      ,COUNT(1) AS INVOICE_CNT
      ,COUNT(CASE WHEN OUT_TYPE_DIV LIKE 'M1%' THEN 1 END) AS M1_CNT
      ,COUNT(CASE WHEN OUT_TYPE_DIV LIKE 'M2%' THEN 1 END) AS M2_CNT
  FROM LO_OUT_M
 WHERE OUTBOUND_DATE BETWEEN TO_DATE(TO_CHAR(:TODAY, 'YYYYMM') || '01', 'YYYY-MM-DD') AND :TODAY
   AND OUT_BOX_DIV  LIKE CASE :COND 
                               WHEN 0 THEN '%'
                               WHEN 1 THEN 'D'
                               WHEN 2 THEN 'F'
                               ELSE 'ZZZ'
                         END || '%'
 GROUP BY OUTBOUND_DATE
 ORDER BY OUTBOUND_DATE;
 
/* MariaDB
SET @COND = 1;
SELECT OUTBOUND_DATE
      ,COUNT(1) AS INVOICE_CNT
      ,COUNT(CASE WHEN OUT_TYPE_DIV LIKE 'M1%' THEN 1 END) AS M1_CNT
      ,COUNT(CASE WHEN OUT_TYPE_DIV LIKE 'M2%' THEN 1 END) AS M2_CNT
  FROM LO_OUT_M
 WHERE OUTBOUND_DATE BETWEEN CONVERT(CONCAT(TO_CHAR(CAST('2019-09-19' AS DATE), 'YYYYMM'), '01'), DATE) AND CAST('2019-09-19' AS DATE)
   AND OUT_BOX_DIV  LIKE CONCAT(CASE @COND 
						                               WHEN 0 THEN '%'
						                               WHEN 1 THEN 'D'
						                               WHEN 2 THEN 'F'
						                               ELSE 'ZZZ'
						                         END, '%')
 GROUP BY OUTBOUND_DATE
 ORDER BY OUTBOUND_DATE;
*/
---------------------------------------------------------------------------------------------------- 





--실전문제② ▶ 이상한 데이터 찾아내기---------------------------------------------------------------
SELECT ITEM_BAR_CD
      ,COUNT(DISTINCT ITEM_CD) AS ITEM_CNT
  FROM LO_OUT_D
 GROUP BY ITEM_BAR_CD
 HAVING COUNT(DISTINCT ITEM_CD) > 1
 ORDER BY CASE WHEN ITEM_BAR_CD IS NOT NULL THEN ITEM_CNT ELSE 0 END DESC;
 
/* MariaDB
UPDATE LO_OUT_D
   SET ITEM_BAR_CD = NULL
 WHERE ITEM_BAR_CD = '';
 
SELECT ITEM_BAR_CD
      ,COUNT(DISTINCT ITEM_CD) AS ITEM_CNT
  FROM LO_OUT_D
 GROUP BY ITEM_BAR_CD
 HAVING COUNT(DISTINCT ITEM_CD) > 1
 ORDER BY CASE WHEN ITEM_BAR_CD IS NOT NULL THEN COUNT(DISTINCT ITEM_CD) ELSE 0 END ASC;
*/
----------------------------------------------------------------------------------------------------





--실전문제③ ▶ 전형적인 SUM(DECODE()) 구문 사용하기-------------------------------------------------
SELECT SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '01' THEN SET_QTY END) AS M01
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '02' THEN SET_QTY END) AS M02
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '03' THEN SET_QTY END) AS M03
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '04' THEN SET_QTY END) AS M04
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '05' THEN SET_QTY END) AS M05
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '06' THEN SET_QTY END) AS M06
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '07' THEN SET_QTY END) AS M07
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '08' THEN SET_QTY END) AS M08
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '09' THEN SET_QTY END) AS M09
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '10' THEN SET_QTY END) AS M10
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '11' THEN SET_QTY END) AS M11
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '12' THEN SET_QTY END) AS M12
  FROM LO_OUT_M
 WHERE OUTBOUND_DATE BETWEEN TO_DATE('20190101', 'YYYY-MM-DD') AND TO_DATE('20191231', 'YYYY-MM-DD');

/*MariaDB 
SELECT SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '01' THEN SET_QTY END) AS M01 
      ,SUM(CASE WHEN DATE_FORMAT(OUTBOUND_DATE, '%m') = '02' THEN SET_QTY END) AS M02
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '03' THEN SET_QTY END) AS M03
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '04' THEN SET_QTY END) AS M04
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '05' THEN SET_QTY END) AS M05
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '06' THEN SET_QTY END) AS M06
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '07' THEN SET_QTY END) AS M07
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '08' THEN SET_QTY END) AS M08
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '09' THEN SET_QTY END) AS M09
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '10' THEN SET_QTY END) AS M10
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '11' THEN SET_QTY END) AS M11
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '12' THEN SET_QTY END) AS M12
  FROM LO_OUT_M
 WHERE OUTBOUND_DATE BETWEEN '2019-01-01' AND '2019-12-31';
*/
----------------------------------------------------------------------------------------------------





--실전문제④ ▶ 일자별 SUM(DECODE()) 구문 사용하기---------------------------------------------------
SELECT OUTBOUND_DATE
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '01' THEN SET_QTY END) AS M01
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '02' THEN SET_QTY END) AS M02
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '03' THEN SET_QTY END) AS M03
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '04' THEN SET_QTY END) AS M04
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '05' THEN SET_QTY END) AS M05
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '06' THEN SET_QTY END) AS M06
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '07' THEN SET_QTY END) AS M07
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '08' THEN SET_QTY END) AS M08
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '09' THEN SET_QTY END) AS M09
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '10' THEN SET_QTY END) AS M10
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '11' THEN SET_QTY END) AS M11
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '12' THEN SET_QTY END) AS M12
  FROM LO_OUT_M
 WHERE OUTBOUND_DATE BETWEEN TO_DATE('20190101', 'YYYY-MM-DD') AND TO_DATE('20191231', 'YYYY-MM-DD')
 GROUP BY OUTBOUND_DATE
 ORDER BY OUTBOUND_DATE;

/*MariaDB 
SELECT OUTBOUND_DATE
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '01' THEN SET_QTY END) AS M01
      ,SUM(CASE WHEN DATE_FORMAT(OUTBOUND_DATE, '%m') = '02' THEN SET_QTY END) AS M02
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '03' THEN SET_QTY END) AS M03
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '04' THEN SET_QTY END) AS M04
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '05' THEN SET_QTY END) AS M05
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '06' THEN SET_QTY END) AS M06
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '07' THEN SET_QTY END) AS M07
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '08' THEN SET_QTY END) AS M08
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '09' THEN SET_QTY END) AS M09
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '10' THEN SET_QTY END) AS M10
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '11' THEN SET_QTY END) AS M11
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '12' THEN SET_QTY END) AS M12
  FROM LO_OUT_M
 WHERE OUTBOUND_DATE BETWEEN '2019-01-01' AND '2019-12-31'
 GROUP BY OUTBOUND_DATE
 ORDER BY OUTBOUND_DATE; 
*/
----------------------------------------------------------------------------------------------------





--실전문제⑤ ▶ 연도별 SUM(DECODE()) 구문 사용하기---------------------------------------------------
SELECT EXTRACT(YEAR FROM OUTBOUND_DATE)                                  AS YYYY
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '01' THEN SET_QTY END) AS M01
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '02' THEN SET_QTY END) AS M02
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '03' THEN SET_QTY END) AS M03
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '04' THEN SET_QTY END) AS M04
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '05' THEN SET_QTY END) AS M05
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '06' THEN SET_QTY END) AS M06
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '07' THEN SET_QTY END) AS M07
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '08' THEN SET_QTY END) AS M08
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '09' THEN SET_QTY END) AS M09
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '10' THEN SET_QTY END) AS M10
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '11' THEN SET_QTY END) AS M11
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '12' THEN SET_QTY END) AS M12
  FROM LO_OUT_M
 GROUP BY EXTRACT(YEAR FROM OUTBOUND_DATE)
 ORDER BY EXTRACT(YEAR FROM OUTBOUND_DATE);
 
/*MariaDB - 동일함 
SELECT TO_CHAR(OUTBOUND_DATE, 'YYYY')                                    AS YYYY
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '01' THEN SET_QTY END) AS M01
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '02' THEN SET_QTY END) AS M02
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '03' THEN SET_QTY END) AS M03
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '04' THEN SET_QTY END) AS M04
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '05' THEN SET_QTY END) AS M05
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '06' THEN SET_QTY END) AS M06
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '07' THEN SET_QTY END) AS M07
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '08' THEN SET_QTY END) AS M08
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '09' THEN SET_QTY END) AS M09
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '10' THEN SET_QTY END) AS M10
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '11' THEN SET_QTY END) AS M11
      ,SUM(CASE TO_CHAR(OUTBOUND_DATE, 'MM') WHEN '12' THEN SET_QTY END) AS M12
  FROM LO_OUT_M
 GROUP BY TO_CHAR(OUTBOUND_DATE, 'YYYY')
 ORDER BY TO_CHAR(OUTBOUND_DATE, 'YYYY');	
*/ 
----------------------------------------------------------------------------------------------------





--실전문제⑥ ▶ 조건 값(변수)에 따른 다른 정렬기준 적용하기------------------------------------------
SELECT INVOICE_NO
      ,LINE_NO
      ,ITEM_CD
      ,ITEM_NM
      ,ORDER_QTY
  FROM LO_OUT_D
 WHERE INVOICE_NO = '346724706214'     
 ORDER BY CASE WHEN :SORT_TYPE = 1 THEN LINE_NO ELSE ORDER_QTY END
         ,LINE_NO;


/*MariaDB   
SET @SORT_TYPE = 1;
SELECT INVOICE_NO
      ,LINE_NO
      ,ITEM_CD
      ,ITEM_NM
      ,ORDER_QTY
  FROM LO_OUT_D
 WHERE INVOICE_NO = '346724706214'
 ORDER BY CASE WHEN @SORT_TYPE = 1 THEN LINE_NO ELSE ORDER_QTY END
         ,LINE_NO;
*/         
----------------------------------------------------------------------------------------------------
